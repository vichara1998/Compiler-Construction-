- First(prog) =                       { class , implement , func , constructor , ϵ }
- First(codeBlock) =                  { class , implement , func , constructor , ϵ }
- First(classOrImplOrFunc) =          { class , implement , func , constructor }
- First(classDecl) =                  { class }
- First(implDef) =                    { implement }
- First(memberDecl) =                 { func , constructor , attribute }
- First(funcDecl) =                   { func , constructor }
- First(implBody) =                   { func , constructor , ϵ }
- First(funcDef) =                    { func , constructor }
- First(funcHead) =                   { func , constructor }
- First(classBody) =                  { public , private , ϵ }
- First(visibility) =                 { public , private }
- First(attributeDecl) =              { attribute }
- First(funcBody) =                   { { }
- First(funcContents) =               { local , self , id , if , while , read , write , return , ϵ }
- First(varDeclOrStmt) =              { local , self , id , if , while , read , write , return }
- First(localVarDecl) =               { local }
- First(statBlock) =                  { { , self , id , if , while , read , write , return , ϵ }
- First(aParams)  =                   { self , id , intLit , floatLit , ( , not , + , - , ϵ }
- First(expr) =                       { self , id , intLit , floatLit , ( , not , + , - }
- First(relExpr) =                    { self , id , intLit , floatLit , ( , not , + , - }
- First(arithExpr) =                  { self , id , intLit , floatLit , ( , not , + , - }
- First(term) =                       { self , id , intLit , floatLit , ( , not , + , - }
- First(factor) =                     { self , id , intLit , floatLit , ( , not , + , - }
- First(sign) =                       { + , - }
- First(statBlockContents) =          { self , id , if , while , read , write , return , ϵ }
- First(statement) =                  { self , id , if , while , read , write , return  }
- First(functionCall) =               { id , self }
- First(variable) =                   { self , id }
- First(prefix) =                     { id , self , ϵ }
- First(assignStat) =                 { self , id }
- First(idnest) =                     { id , self }
- First(idOrSelf) =                   { id , self }
- First(identifier)  =                { [ , ϵ }
- First(varSelector)  =               { [ , ϵ }
- First(indice)  =                    { [ }
- First(arrLength) =                  { [ , ϵ }
- First(arraySize)  =                 { [ }
- First(returnType)  =                { integer , float , id , void }
- First(type)  =                      { integer , float , id }
- First(fParams)  =                   { id , ϵ }
- First(fParamsCont) =                { , , ϵ }
- First(fParamsTail)  =               { , }
- First(aParamsCont) =                { , , ϵ }
- First(aParamsTail)  =               { , }
- First(assignOp)  =                  { := }
- First(relOp)  =                     { == , <> , < , > , <= , >= }
- First(arithOperations) =            { + , - , or , ϵ }
- First(addOp)  =                     { + , - , or }
- First(termOperations) =             { *, /, and , ϵ }
- First(multOp)  =                    { * , / , and }
- First(varDecl)  =                   { id }
- First(interface) =                  { , , ϵ }
- First(classExtension) =             { isa }